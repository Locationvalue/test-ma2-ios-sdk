#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
#ifndef NAUTILUSANALYTICSSDK_SWIFT_H
#define NAUTILUSANALYTICSSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import NautilusContainerSDK;
@import NautilusCoreSDK;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NautilusAnalyticsSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NautilusComponentDependency;
@class NSString;
@class NautilusApp;
@class NSError;
@protocol NautilusAnalyticsPlugin;
enum NautilusAnalyticsEvent : NSInteger;

SWIFT_CLASS("_TtC20NautilusAnalyticsSDK17NautilusAnalytics")
@interface NautilusAnalytics : NSObject <NautilusFeature>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NautilusComponentType componentType;)
+ (NautilusComponentType)componentType SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NautilusComponentDependency *> * _Nonnull dependencies;)
+ (NSArray<NautilusComponentDependency *> * _Nonnull)dependencies SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable configFilename;)
+ (NSString * _Nullable)configFilename SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) NautilusApp * _Nonnull app;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
/// <code>NautilusAnalyticsSDK</code>の機能の利用可否ステータス
@property (nonatomic, readonly) enum NautilusFeatureStatus featureStatus;
+ (void)initializeWithApplication:(NautilusApp * _Nonnull)application completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
+ (NautilusAnalytics * _Nonnull)analytics SWIFT_WARN_UNUSED_RESULT;
+ (NautilusAnalytics * _Nonnull)analyticsAppNamed:(NSString * _Nonnull)appName SWIFT_WARN_UNUSED_RESULT;
/// プラグインの追加
/// \param plugin 追加するプラグイン
///
- (void)addPlugin:(id <NautilusAnalyticsPlugin> _Nonnull)plugin;
/// プラグインの削除
/// \param plugin 削除するプラグイン
///
- (void)removePlugin:(id <NautilusAnalyticsPlugin> _Nonnull)plugin;
/// イベントを送信する（プロパティなし）
/// \param event イベント名
///
- (void)sendEventWithEventType:(enum NautilusAnalyticsEvent)event;
/// イベントを送信する
/// \param event イベント名
///
/// \param eventProperties イベントプロパティ
///
- (void)sendEventWithEventType:(enum NautilusAnalyticsEvent)event eventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties;
/// イベントを送信する（プロパティなし）
/// \param eventName イベント名
///
- (void)sendEvent:(NSString * _Nonnull)eventName;
/// イベントを送信する
/// \param eventName イベント名
///
/// \param eventProperties イベントプロパティ
///
- (void)sendEvent:(NSString * _Nonnull)eventName withEventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Bool
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withBoolValue:(BOOL)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Int
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withIntValue:(NSInteger)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Float
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withFloatValue:(float)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Double
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withDoubleValue:(double)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value String
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withStringValue:(NSString * _Nonnull)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Array
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withArrayValue:(NSArray * _Nonnull)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Dictionary
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withDictionaryValue:(NSDictionary<NSString *, id> * _Nonnull)value;
/// ユーザプロパティを削除する
/// \param propertyName 削除するユーザプロパティネーム
///
- (void)removeUserProperty:(NSString * _Nonnull)propertyName;
/// ユーザーIDの設定
/// \param userID ユーザID
///
- (void)setUserID:(NSString * _Nonnull)userID;
/// ユーザーIDの削除
- (void)removeUserID;
/// 現在セットされているユーザプロパティを送信する
- (void)sendUserProperty;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 分析プラットフォームに送るイベント名
typedef SWIFT_ENUM(NSInteger, NautilusAnalyticsEvent, open) {
/// トップページを見る
  NautilusAnalyticsEventShowTopPage = 0,
/// アプリがバックグラウンドに移動
  NautilusAnalyticsEventMoveAppBackground = 1,
/// アプリがフォアグラウンドに移動
  NautilusAnalyticsEventMoveAppForeground = 2,
/// イントロダクション1を見る
  NautilusAnalyticsEventShowIntroduction1 = 3,
/// イントロダクション2を見る
  NautilusAnalyticsEventShowIntroduction2 = 4,
/// イントロダクション3を見る
  NautilusAnalyticsEventShowIntroduction3 = 5,
/// イントロダクション4を見る
  NautilusAnalyticsEventShowIntroduction4 = 6,
/// イントロダクション5を見る
  NautilusAnalyticsEventShowIntroduction5 = 7,
/// イントロダクション6を見る
  NautilusAnalyticsEventShowIntroduction6 = 8,
/// イントロダクションを閉じる
  NautilusAnalyticsEventTapIntroductionClose = 9,
/// 利用規約を見る
  NautilusAnalyticsEventShowTermsOfUse = 10,
/// 利用規約に同意する
  NautilusAnalyticsEventTapTermsOfUseOK = 11,
/// 会員登録画面を見る
  NautilusAnalyticsEventShowMemberAttribute = 12,
/// 会員登録をタップする
  NautilusAnalyticsEventTapMemberAttributeRegister = 13,
/// 会員登録をキャンセルする
  NautilusAnalyticsEventTapMemberAttributeCancel = 14,
/// アンケート画面を見る
  NautilusAnalyticsEventShowSurvey = 15,
/// アンケートに回答する
  NautilusAnalyticsEventTapSurveyAnswer = 16,
/// アンケートをキャンセルする
  NautilusAnalyticsEventTapSurveyCancel = 17,
/// プッシュ通知履歴を見る
  NautilusAnalyticsEventShowPushlist = 18,
/// プッシュ通知の履歴をタップする
  NautilusAnalyticsEventTapPushlistHistory = 19,
/// マネージコードの紐付けが完了する
  NautilusAnalyticsEventDoneSetManegeCode = 20,
/// クーポン一覧(すべて)を見る
  NautilusAnalyticsEventShowCouponListAll = 21,
/// クーポン一覧のカテゴリを見る
  NautilusAnalyticsEventShowCouponListCategory = 22,
/// クーポン詳細を見る
  NautilusAnalyticsEventShowCouponDetail = 23,
/// クーポンをお気に入りにする
  NautilusAnalyticsEventTapCouponFavoriteAdd = 24,
/// クーポンのお気に入りを解除する
  NautilusAnalyticsEventTapCouponFavoriteDelete = 25,
/// お気に入りクーポンのリストを見る
  NautilusAnalyticsEventShowCouponFavoriteList = 26,
/// クーポンを利用する
  NautilusAnalyticsEventTapCouponUse = 27,
/// クーポンからWEBサイトに遷移する
  NautilusAnalyticsEventTapCouponWeb = 28,
/// クーポンの利用条件を見る
  NautilusAnalyticsEventTapCouponConditions = 29,
/// アプリ内メッセージを見る
  NautilusAnalyticsEventShowInAppMessage = 30,
/// アプリ内メッセージをタップする
  NautilusAnalyticsEventTapInAppMessage = 31,
/// アプリ内メッセージを閉じる
  NautilusAnalyticsEventCloseInAppMessage = 32,
/// 店舗検索の地図画面を見る
  NautilusAnalyticsEventShowStoreSearchMap = 33,
/// 店舗リストを表示を見る
  NautilusAnalyticsEventSwipeStoreList = 34,
/// 店舗検索地図内のピンをタップする
  NautilusAnalyticsEventTapStorePinInMap = 35,
/// 店舗一覧を見る
  NautilusAnalyticsEventShowStoreList = 36,
/// 店舗詳細を見る
  NautilusAnalyticsEventShowStoreDetail = 37,
/// 店舗の電話番号をタップする
  NautilusAnalyticsEventTapStoreTelNumber = 38,
/// 店舗詳細からWEBに遷移する
  NautilusAnalyticsEventTapStoreWeb = 39,
/// マップアプリを開く
  NautilusAnalyticsEventTapMapApp = 40,
/// お気に入り店舗登録をする
  NautilusAnalyticsEventTapStoreFavoriteAdd = 41,
/// お気に入り店舗登録を解除する
  NautilusAnalyticsEventTapStoreFavoriteDelete = 42,
/// お気に入り店舗一覧を見る
  NautilusAnalyticsEventShowFavoriteStoreList = 43,
/// 店舗を検索する
  NautilusAnalyticsEventDoneStoreSearch = 44,
/// 店舗検索の条件を解除する
  NautilusAnalyticsEventTapStoreSearchConditionDelete = 45,
/// 店舗検索キーワードの履歴を消す
  NautilusAnalyticsEventTapStoreKeywordSearchHistoryDelete = 46,
/// 検索条件絞り込み画面を見る
  NautilusAnalyticsEventShowStoreSearchFilteringScreen = 47,
/// 検索条件絞り込み画面を閉じる
  NautilusAnalyticsEventTapStoreSearchFilteringScreenClose = 48,
/// 検索条件絞り込み画面をクリアする
  NautilusAnalyticsEventTapStoreSearchFilteringScreenClear = 49,
/// 都道府県選択画面を見る
  NautilusAnalyticsEventShowStoreSearchAreaSelect = 50,
/// バナーをタップする
  NautilusAnalyticsEventTapBanner = 51,
/// お知らせリスト(すべて)を見る
  NautilusAnalyticsEventShowContentsListAll = 52,
/// お知らせリストのカテゴリを見る
  NautilusAnalyticsEventShowContentsListCategory = 53,
/// お知らせ詳細を見る
  NautilusAnalyticsEventShowContentsDetail = 54,
/// お知らせをお気に入りにする
  NautilusAnalyticsEventTapContentsFavoriteAdd = 55,
/// お知らせのお気に入りを解除する
  NautilusAnalyticsEventTapContentsFavoriteDelete = 56,
/// お気に入りお知らせのリストを見る
  NautilusAnalyticsEventShowContentsFavoriteList = 57,
/// お知らせ詳細からWEBサイトへ遷移する
  NautilusAnalyticsEventTapContentsWeb = 58,
/// 抽選一覧画面を表示
  NautilusAnalyticsEventShowLotteryList = 59,
/// 抽選詳細画面を表示
  NautilusAnalyticsEventShowLotteryDetail = 60,
/// 抽選実行APIのレスポンスを受け取った
  NautilusAnalyticsEventDoneLotteryRunning = 61,
/// 抽選結果画面を表示
  NautilusAnalyticsEventShowLotteryResult = 62,
/// 抽選結果を「確認するボタン」をタップ
  NautilusAnalyticsEventTapPrizeChecking = 63,
/// スタンプカードリストを見る
  NautilusAnalyticsEventShowStampCardList = 64,
/// スタンプカード詳細を見る
  NautilusAnalyticsEventShowStampCardDetail = 65,
/// スタンプカード説明テキストを見る
  NautilusAnalyticsEventShowStampCardDescriptionMessage = 66,
/// スタンプカードの景品交換をタップする
  NautilusAnalyticsEventTapStampCardPrizeExchange = 67,
/// スタンプを貯めるをタップする
  NautilusAnalyticsEventTapStampCardCheckIn = 68,
/// スタンプカードの自動付与景品ダイアログを見る
  NautilusAnalyticsEventShowStampCardPrizeAutoExchangeDialog = 69,
/// スタンプカードのコンプリートダイアログを見る
  NautilusAnalyticsEventShowStampCardCompleteDialog = 70,
/// スタンプカードを交換しますかダイアログを見る
  NautilusAnalyticsEventShowStampCardExchangeSelectDialog = 71,
/// スタンプカードを交換しましたを見る
  NautilusAnalyticsEventShowStampCardExchangeSuccessDialog = 72,
/// スタンプカードを交換しました画面内リンクをタップ
  NautilusAnalyticsEventTapStampCardExchangeSuccessLinkInDialog = 73,
/// スタンプラリー一覧を見る
  NautilusAnalyticsEventShowStampRallyList = 74,
/// スタンプラリー詳細を見る
  NautilusAnalyticsEventShowStampRallyDetail = 75,
/// スタンプラリーのスポットをタップ
  NautilusAnalyticsEventTapStampRallySpotList = 76,
/// スタンプラリーの景品交換をタップする
  NautilusAnalyticsEventTapStampRallyPrizeExchange = 77,
/// スタンプを貯めるをタップする
  NautilusAnalyticsEventTapStampRallyCheckIn = 78,
/// スタンプラリーの自動付与景品ダイアログを見る
  NautilusAnalyticsEventShowStampRallyPrizeAutoExchangeDialog = 79,
/// スタンプラリーのコンプリートダイアログを見る
  NautilusAnalyticsEventShowStampRallyCompleteDialog = 80,
/// スタンプラリーの交換ダイアログを見る
  NautilusAnalyticsEventShowStampRallyExchangeSelectDialog = 81,
/// スタンプラリーの交換成功ダイアログを見る
  NautilusAnalyticsEventShowStampRallyExchangeSuccessDialog = 82,
/// スタンプラリーの交換成功ダイアログ内のリンクをタップ
  NautilusAnalyticsEventTapStampRallyExchangeSuccessLinkInDialog = 83,
/// スタンプラリースポット一覧を見る
  NautilusAnalyticsEventShowStampRallySpotList = 84,
/// スポット一覧でスポットをタップ
  NautilusAnalyticsEventTapStampRallySpot = 85,
/// スタンプラリーのスポット一覧で経路検索をタップ
  NautilusAnalyticsEventTapStampRallySpotMapApp = 86,
/// スポット一覧地図内のピンをタップする
  NautilusAnalyticsEventTapStampRallySpotPinInMap = 87,
/// 店舗検索広域地図画面を見る
  NautilusAnalyticsEventShowStoreSearchWidemap = 88,
};

/// 分析SDKから送信するイベントのチャネル定義
typedef SWIFT_ENUM(NSInteger, NautilusAnalyticsEventChannel, open) {
/// アプリ
  NautilusAnalyticsEventChannelApp = 0,
/// アプリ内WebView
  NautilusAnalyticsEventChannelWebInApp = 1,
};


/// 分析SDKから送信されるイベントのペイロード
SWIFT_CLASS("_TtC20NautilusAnalyticsSDK29NautilusAnalyticsEventPayload")
@interface NautilusAnalyticsEventPayload : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// イベントプロパティ：分析プラットフォームに送る時の名前の定義
typedef SWIFT_ENUM(NSInteger, NautilusAnalyticsEventProperty, open) {
/// 直前のイベント
  NautilusAnalyticsEventPropertyPreviousEvent = 0,
/// 緯度
  NautilusAnalyticsEventPropertyLatitude = 1,
/// 経度
  NautilusAnalyticsEventPropertyLongitude = 2,
/// セッションID
  NautilusAnalyticsEventPropertySessionID = 3,
/// イベント発生日時
  NautilusAnalyticsEventPropertyEventFiredTime = 4,
/// セグメントID
  NautilusAnalyticsEventPropertySegmentID = 5,
/// チャネルタイプ
  NautilusAnalyticsEventPropertyChannelType = 6,
/// 起動状態
  NautilusAnalyticsEventPropertyAppStartType = 7,
/// アプリ起動
  NautilusAnalyticsEventPropertyAppStart = 8,
/// 移動経機
  NautilusAnalyticsEventPropertyAppMoveTrigger = 9,
/// 移動経機となったPUSH ID
  NautilusAnalyticsEventPropertyAppMoveNotificationID = 10,
/// 移動経機となったPUSHタイトル
  NautilusAnalyticsEventPropertyAppMoveNotificationTitle = 11,
/// 移動経機となったときの遷移先画面
  NautilusAnalyticsEventPropertyAppMoveNotificationTransition = 12,
/// 移動経機となったURL
  NautilusAnalyticsEventPropertyAppMoveURL = 13,
/// 離脱したスクリーン
  NautilusAnalyticsEventPropertyIntroductionFinishPage = 14,
/// 性別
  NautilusAnalyticsEventPropertyGender = 15,
/// 誕生年月日
  NautilusAnalyticsEventPropertyBirthday = 16,
/// 都道府県名
  NautilusAnalyticsEventPropertyPrefecture = 17,
/// 市区町村名
  NautilusAnalyticsEventPropertyMunicipality = 18,
/// ブランドID
  NautilusAnalyticsEventPropertyBrandID = 19,
/// 顧客管理コード
  NautilusAnalyticsEventPropertyManageCode = 20,
/// 拡張項目1
  NautilusAnalyticsEventPropertyOptionalAttribute1 = 21,
/// 拡張項目2
  NautilusAnalyticsEventPropertyOptionalAttribute2 = 22,
/// 拡張項目3
  NautilusAnalyticsEventPropertyOptionalAttribute3 = 23,
/// 拡張項目4
  NautilusAnalyticsEventPropertyOptionalAttribute4 = 24,
/// 拡張項目5
  NautilusAnalyticsEventPropertyOptionalAttribute5 = 25,
/// 拡張項目6
  NautilusAnalyticsEventPropertyOptionalAttribute6 = 26,
/// 拡張項目7
  NautilusAnalyticsEventPropertyOptionalAttribute7 = 27,
/// 拡張項目8
  NautilusAnalyticsEventPropertyOptionalAttribute8 = 28,
/// 拡張項目9
  NautilusAnalyticsEventPropertyOptionalAttribute9 = 29,
/// 拡張項目10
  NautilusAnalyticsEventPropertyOptionalAttribute10 = 30,
/// PUSH通知ID
  NautilusAnalyticsEventPropertyNotificationID = 31,
/// PUSH通知タイトル
  NautilusAnalyticsEventPropertyNotificationTitle = 32,
/// 遷移先
  NautilusAnalyticsEventPropertyNotificationTransition = 33,
/// クーポンID
  NautilusAnalyticsEventPropertyCouponID = 34,
/// クーポンタイトル
  NautilusAnalyticsEventPropertyCouponTitle = 35,
/// クーポンカテゴリ名”
  NautilusAnalyticsEventPropertyCouponCategory = 36,
/// クーポン種別
  NautilusAnalyticsEventPropertyCouponType = 37,
/// 遷移先
  NautilusAnalyticsEventPropertyCouponURL = 38,
/// メッセージID
  NautilusAnalyticsEventPropertyInAppMessageID = 39,
/// メッセージ内容
  NautilusAnalyticsEventPropertyInAppMessageBody = 40,
/// 遷移先
  NautilusAnalyticsEventPropertyInAppMessageTransition = 41,
/// メッセージの表示方法
  NautilusAnalyticsEventPropertyInAppMessageType = 42,
/// リスト表示したときの動き
  NautilusAnalyticsEventPropertyStoreListMoveActionType = 43,
/// 表示領域
  NautilusAnalyticsEventPropertyStoreListDisplayRatio = 44,
/// 店舗ID
  NautilusAnalyticsEventPropertyStoreID = 45,
/// 店舗名
  NautilusAnalyticsEventPropertyStoreName = 46,
/// リンク文言
  NautilusAnalyticsEventPropertyStoreLinkTitle = 47,
/// 遷移先
  NautilusAnalyticsEventPropertyStoreURL = 48,
/// キーワード
  NautilusAnalyticsEventPropertyStoreSearchKeyword = 49,
/// エリア
  NautilusAnalyticsEventPropertyStoreSearchFilteringArea = 50,
/// 検索時の中心座標
  NautilusAnalyticsEventPropertyStoreSearchCenterCoordinate = 51,
/// 検索時に動かした距離
  NautilusAnalyticsEventPropertyStoreSearchMoveDistance = 52,
/// 表示されてるピンの数
  NautilusAnalyticsEventPropertyStoreSearchNuberOfFoundShops = 53,
/// バナーID
  NautilusAnalyticsEventPropertyBannerID = 54,
/// バナータイトル
  NautilusAnalyticsEventPropertyBannerTitle = 55,
/// バナーカテゴリ
  NautilusAnalyticsEventPropertyBannerCategory = 56,
/// バナー表示方法
  NautilusAnalyticsEventPropertyBannerStyle = 57,
/// バナー表示位置
  NautilusAnalyticsEventPropertyBannerIndex = 58,
/// 遷移先
  NautilusAnalyticsEventPropertyBannerTransition = 59,
/// カテゴリ名
  NautilusAnalyticsEventPropertySelectedContentCategory = 60,
/// コンテンツID
  NautilusAnalyticsEventPropertyContentID = 61,
/// コンテンツタイトル
  NautilusAnalyticsEventPropertyContentTitle = 62,
/// コンテンツカテゴリ名
  NautilusAnalyticsEventPropertyContentCategory = 63,
/// コンテンツ種別
  NautilusAnalyticsEventPropertyContentType = 64,
/// 遷移先
  NautilusAnalyticsEventPropertyContentURL = 65,
/// 抽選ID
  NautilusAnalyticsEventPropertyLotteryID = 66,
/// 抽選タイトル
  NautilusAnalyticsEventPropertyLotteryTitle = 67,
/// 抽選種類
  NautilusAnalyticsEventPropertyLotteryType = 68,
/// 抽選実行済みか
  NautilusAnalyticsEventPropertyLotteryCompleted = 69,
/// 景品ID
  NautilusAnalyticsEventPropertyPrizeID = 70,
/// 何等（抽選結果）
  NautilusAnalyticsEventPropertyLotteryRank = 71,
/// 景品の種類
  NautilusAnalyticsEventPropertyPrizeType = 72,
/// クーポン交換ID
  NautilusAnalyticsEventPropertyPrizeCouponExchangeID = 73,
/// 付与ポイント
  NautilusAnalyticsEventPropertyPrizePoint = 74,
/// スタンプカードID
  NautilusAnalyticsEventPropertyStampCardID = 75,
/// スタンプカードタイトル
  NautilusAnalyticsEventPropertyStampCardTitle = 76,
/// スタンプカードPrizeID
  NautilusAnalyticsEventPropertyStampCardPrizeID = 77,
/// スタンプカードPrizeタイトル
  NautilusAnalyticsEventPropertyStampCardPrizeTitle = 78,
/// スタンプラリーID
  NautilusAnalyticsEventPropertyStampRallyID = 79,
/// スタンプラリータイトル
  NautilusAnalyticsEventPropertyStampRallyTitle = 80,
/// スタンプラリーPrizeID
  NautilusAnalyticsEventPropertyStampRallyPrizeID = 81,
/// スタンプラリーPrizeタイトル
  NautilusAnalyticsEventPropertyStampRallyPrizeTitle = 82,
/// スポットID
  NautilusAnalyticsEventPropertySpotID = 83,
/// スポット名
  NautilusAnalyticsEventPropertySpotName = 84,
};


/// イベント送信、ユーザープロパティ送信、ユーザーIDの設定が行われたことを検知するためのインターフェース
SWIFT_PROTOCOL("_TtP20NautilusAnalyticsSDK23NautilusAnalyticsPlugin_")
@protocol NautilusAnalyticsPlugin
/// プラグイン名
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// 初期化
/// \param name プラグイン名 
///
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name;
/// 初期化
/// \param analytics NautilusAnalytics 
///
- (void)setup:(NautilusAnalytics * _Nonnull)analytics;
/// イベント送信
/// \param payload アプリから送信されるイベントのペイロード 
///
- (NautilusAnalyticsEventPayload * _Nonnull)sendEventWithPayload:(NautilusAnalyticsEventPayload * _Nonnull)payload SWIFT_WARN_UNUSED_RESULT;
/// ユーザープロパティ設定
/// \param propertyName プロパティ名
///
/// \param value プロパティ
///
- (void)setUserPropertyWithPropertyName:(NSString * _Nonnull)propertyName value:(id _Nullable)value;
/// ユーザープロパティの削除
/// \param propertyName プロパティ名 
///
- (void)removeUserPropertyWithPropertyName:(NSString * _Nonnull)propertyName;
/// ユーザープロパティ送信
- (void)sendUserProperty;
/// ユーザーIDの設定
/// \param userID ユーザID 
///
- (void)setUserID:(NSString * _Nonnull)userID;
/// ユーザーIDの削除
- (void)removeUserID;
@end

/// ユーザプロパティ：分析プラットフォームに送る時の名前の定義
typedef SWIFT_ENUM(NSInteger, NautilusAnalyticsUserProperty, open) {
/// CID
  NautilusAnalyticsUserPropertyCid = 0,
/// PID
  NautilusAnalyticsUserPropertyPid = 1,
/// お気に入り店舗ID
  NautilusAnalyticsUserPropertyFavoriteShopIDList = 2,
/// お気に入り店舗名
  NautilusAnalyticsUserPropertyFavoriteShopNameList = 3,
/// お気に入りクーポンID
  NautilusAnalyticsUserPropertyFavoriteCouponIDList = 4,
/// お気に入りクーポンタイトル
  NautilusAnalyticsUserPropertyFavoriteCouponNameList = 5,
/// お気に入りコンテンツID
  NautilusAnalyticsUserPropertyFavoriteContentIDList = 6,
/// お気に入りコンテンツタイトル
  NautilusAnalyticsUserPropertyFavoriteContentNameList = 7,
/// 性別
  NautilusAnalyticsUserPropertyGender = 8,
/// 誕生年月日
  NautilusAnalyticsUserPropertyBirthday = 9,
/// 都道府県名
  NautilusAnalyticsUserPropertyPrefecture = 10,
/// 市区町村名
  NautilusAnalyticsUserPropertyMunicipality = 11,
/// 標準会員属性1
  NautilusAnalyticsUserPropertyOptionalAttribute1 = 12,
/// 標準会員属性2
  NautilusAnalyticsUserPropertyOptionalAttribute2 = 13,
/// 標準会員属性3
  NautilusAnalyticsUserPropertyOptionalAttribute3 = 14,
/// 標準会員属性4
  NautilusAnalyticsUserPropertyOptionalAttribute4 = 15,
/// 標準会員属性5
  NautilusAnalyticsUserPropertyOptionalAttribute5 = 16,
/// 標準会員属性6
  NautilusAnalyticsUserPropertyOptionalAttribute6 = 17,
/// 標準会員属性7
  NautilusAnalyticsUserPropertyOptionalAttribute7 = 18,
/// 標準会員属性8
  NautilusAnalyticsUserPropertyOptionalAttribute8 = 19,
/// 標準会員属性9
  NautilusAnalyticsUserPropertyOptionalAttribute9 = 20,
/// 標準会員属性10
  NautilusAnalyticsUserPropertyOptionalAttribute10 = 21,
};

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
#ifndef NAUTILUSANALYTICSSDK_SWIFT_H
#define NAUTILUSANALYTICSSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import NautilusContainerSDK;
@import NautilusCoreSDK;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NautilusAnalyticsSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NautilusComponentDependency;
@class NSString;
@class NautilusApp;
@class NSError;
@protocol NautilusAnalyticsPlugin;
enum NautilusAnalyticsEvent : NSInteger;

SWIFT_CLASS("_TtC20NautilusAnalyticsSDK17NautilusAnalytics")
@interface NautilusAnalytics : NSObject <NautilusFeature>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NautilusComponentType componentType;)
+ (NautilusComponentType)componentType SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NautilusComponentDependency *> * _Nonnull dependencies;)
+ (NSArray<NautilusComponentDependency *> * _Nonnull)dependencies SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable configFilename;)
+ (NSString * _Nullable)configFilename SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) NautilusApp * _Nonnull app;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
/// <code>NautilusAnalyticsSDK</code>の機能の利用可否ステータス
@property (nonatomic, readonly) enum NautilusFeatureStatus featureStatus;
+ (void)initializeWithApplication:(NautilusApp * _Nonnull)application completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
+ (NautilusAnalytics * _Nonnull)analytics SWIFT_WARN_UNUSED_RESULT;
+ (NautilusAnalytics * _Nonnull)analyticsAppNamed:(NSString * _Nonnull)appName SWIFT_WARN_UNUSED_RESULT;
/// プラグインの追加
/// \param plugin 追加するプラグイン
///
- (void)addPlugin:(id <NautilusAnalyticsPlugin> _Nonnull)plugin;
/// プラグインの削除
/// \param plugin 削除するプラグイン
///
- (void)removePlugin:(id <NautilusAnalyticsPlugin> _Nonnull)plugin;
/// イベントを送信する（プロパティなし）
/// \param event イベント名
///
- (void)sendEventWithEventType:(enum NautilusAnalyticsEvent)event;
/// イベントを送信する
/// \param event イベント名
///
/// \param eventProperties イベントプロパティ
///
- (void)sendEventWithEventType:(enum NautilusAnalyticsEvent)event eventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties;
/// イベントを送信する（プロパティなし）
/// \param eventName イベント名
///
- (void)sendEvent:(NSString * _Nonnull)eventName;
/// イベントを送信する
/// \param eventName イベント名
///
/// \param eventProperties イベントプロパティ
///
- (void)sendEvent:(NSString * _Nonnull)eventName withEventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Bool
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withBoolValue:(BOOL)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Int
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withIntValue:(NSInteger)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Float
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withFloatValue:(float)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Double
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withDoubleValue:(double)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value String
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withStringValue:(NSString * _Nonnull)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Array
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withArrayValue:(NSArray * _Nonnull)value;
/// ユーザプロパティをセットする
/// \param propertyName ユーザプロパティネーム
///
/// \param value Dictionary
///
- (void)setUserProperty:(NSString * _Nonnull)propertyName withDictionaryValue:(NSDictionary<NSString *, id> * _Nonnull)value;
/// ユーザプロパティを削除する
/// \param propertyName 削除するユーザプロパティネーム
///
- (void)removeUserProperty:(NSString * _Nonnull)propertyName;
/// ユーザーIDの設定
/// \param userID ユーザID
///
- (void)setUserID:(NSString * _Nonnull)userID;
/// ユーザーIDの削除
- (void)removeUserID;
/// 現在セットされているユーザプロパティを送信する
- (void)sendUserProperty;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 分析プラットフォームに送るイベント名
typedef SWIFT_ENUM(NSInteger, NautilusAnalyticsEvent, open) {
/// トップページを見る
  NautilusAnalyticsEventShowTopPage = 0,
/// アプリがバックグラウンドに移動
  NautilusAnalyticsEventMoveAppBackground = 1,
/// アプリがフォアグラウンドに移動
  NautilusAnalyticsEventMoveAppForeground = 2,
/// イントロダクション1を見る
  NautilusAnalyticsEventShowIntroduction1 = 3,
/// イントロダクション2を見る
  NautilusAnalyticsEventShowIntroduction2 = 4,
/// イントロダクション3を見る
  NautilusAnalyticsEventShowIntroduction3 = 5,
/// イントロダクション4を見る
  NautilusAnalyticsEventShowIntroduction4 = 6,
/// イントロダクション5を見る
  NautilusAnalyticsEventShowIntroduction5 = 7,
/// イントロダクション6を見る
  NautilusAnalyticsEventShowIntroduction6 = 8,
/// イントロダクションを閉じる
  NautilusAnalyticsEventTapIntroductionClose = 9,
/// 利用規約を見る
  NautilusAnalyticsEventShowTermsOfUse = 10,
/// 利用規約に同意する
  NautilusAnalyticsEventTapTermsOfUseOK = 11,
/// 会員登録画面を見る
  NautilusAnalyticsEventShowMemberAttribute = 12,
/// 会員登録をタップする
  NautilusAnalyticsEventTapMemberAttributeRegister = 13,
/// 会員登録をキャンセルする
  NautilusAnalyticsEventTapMemberAttributeCancel = 14,
/// アンケート画面を見る
  NautilusAnalyticsEventShowSurvey = 15,
/// アンケートに回答する
  NautilusAnalyticsEventTapSurveyAnswer = 16,
/// アンケートをキャンセルする
  NautilusAnalyticsEventTapSurveyCancel = 17,
/// プッシュ通知履歴を見る
  NautilusAnalyticsEventShowPushlist = 18,
/// プッシュ通知の履歴をタップする
  NautilusAnalyticsEventTapPushlistHistory = 19,
/// マネージコードの紐付けが完了する
  NautilusAnalyticsEventDoneSetManegeCode = 20,
/// クーポン一覧(すべて)を見る
  NautilusAnalyticsEventShowCouponListAll = 21,
/// クーポン一覧のカテゴリを見る
  NautilusAnalyticsEventShowCouponListCategory = 22,
/// クーポン詳細を見る
  NautilusAnalyticsEventShowCouponDetail = 23,
/// クーポンをお気に入りにする
  NautilusAnalyticsEventTapCouponFavoriteAdd = 24,
/// クーポンのお気に入りを解除する
  NautilusAnalyticsEventTapCouponFavoriteDelete = 25,
/// お気に入りクーポンのリストを見る
  NautilusAnalyticsEventShowCouponFavoriteList = 26,
/// クーポンを利用する
  NautilusAnalyticsEventTapCouponUse = 27,
/// クーポンからWEBサイトに遷移する
  NautilusAnalyticsEventTapCouponWeb = 28,
/// クーポンの利用条件を見る
  NautilusAnalyticsEventTapCouponConditions = 29,
/// アプリ内メッセージを見る
  NautilusAnalyticsEventShowInAppMessage = 30,
/// アプリ内メッセージをタップする
  NautilusAnalyticsEventTapInAppMessage = 31,
/// アプリ内メッセージを閉じる
  NautilusAnalyticsEventCloseInAppMessage = 32,
/// 店舗検索の地図画面を見る
  NautilusAnalyticsEventShowStoreSearchMap = 33,
/// 店舗リストを表示を見る
  NautilusAnalyticsEventSwipeStoreList = 34,
/// 店舗検索地図内のピンをタップする
  NautilusAnalyticsEventTapStorePinInMap = 35,
/// 店舗一覧を見る
  NautilusAnalyticsEventShowStoreList = 36,
/// 店舗詳細を見る
  NautilusAnalyticsEventShowStoreDetail = 37,
/// 店舗の電話番号をタップする
  NautilusAnalyticsEventTapStoreTelNumber = 38,
/// 店舗詳細からWEBに遷移する
  NautilusAnalyticsEventTapStoreWeb = 39,
/// マップアプリを開く
  NautilusAnalyticsEventTapMapApp = 40,
/// お気に入り店舗登録をする
  NautilusAnalyticsEventTapStoreFavoriteAdd = 41,
/// お気に入り店舗登録を解除する
  NautilusAnalyticsEventTapStoreFavoriteDelete = 42,
/// お気に入り店舗一覧を見る
  NautilusAnalyticsEventShowFavoriteStoreList = 43,
/// 店舗を検索する
  NautilusAnalyticsEventDoneStoreSearch = 44,
/// 店舗検索の条件を解除する
  NautilusAnalyticsEventTapStoreSearchConditionDelete = 45,
/// 店舗検索キーワードの履歴を消す
  NautilusAnalyticsEventTapStoreKeywordSearchHistoryDelete = 46,
/// 検索条件絞り込み画面を見る
  NautilusAnalyticsEventShowStoreSearchFilteringScreen = 47,
/// 検索条件絞り込み画面を閉じる
  NautilusAnalyticsEventTapStoreSearchFilteringScreenClose = 48,
/// 検索条件絞り込み画面をクリアする
  NautilusAnalyticsEventTapStoreSearchFilteringScreenClear = 49,
/// 都道府県選択画面を見る
  NautilusAnalyticsEventShowStoreSearchAreaSelect = 50,
/// バナーをタップする
  NautilusAnalyticsEventTapBanner = 51,
/// お知らせリスト(すべて)を見る
  NautilusAnalyticsEventShowContentsListAll = 52,
/// お知らせリストのカテゴリを見る
  NautilusAnalyticsEventShowContentsListCategory = 53,
/// お知らせ詳細を見る
  NautilusAnalyticsEventShowContentsDetail = 54,
/// お知らせをお気に入りにする
  NautilusAnalyticsEventTapContentsFavoriteAdd = 55,
/// お知らせのお気に入りを解除する
  NautilusAnalyticsEventTapContentsFavoriteDelete = 56,
/// お気に入りお知らせのリストを見る
  NautilusAnalyticsEventShowContentsFavoriteList = 57,
/// お知らせ詳細からWEBサイトへ遷移する
  NautilusAnalyticsEventTapContentsWeb = 58,
/// 抽選一覧画面を表示
  NautilusAnalyticsEventShowLotteryList = 59,
/// 抽選詳細画面を表示
  NautilusAnalyticsEventShowLotteryDetail = 60,
/// 抽選実行APIのレスポンスを受け取った
  NautilusAnalyticsEventDoneLotteryRunning = 61,
/// 抽選結果画面を表示
  NautilusAnalyticsEventShowLotteryResult = 62,
/// 抽選結果を「確認するボタン」をタップ
  NautilusAnalyticsEventTapPrizeChecking = 63,
/// スタンプカードリストを見る
  NautilusAnalyticsEventShowStampCardList = 64,
/// スタンプカード詳細を見る
  NautilusAnalyticsEventShowStampCardDetail = 65,
/// スタンプカード説明テキストを見る
  NautilusAnalyticsEventShowStampCardDescriptionMessage = 66,
/// スタンプカードの景品交換をタップする
  NautilusAnalyticsEventTapStampCardPrizeExchange = 67,
/// スタンプを貯めるをタップする
  NautilusAnalyticsEventTapStampCardCheckIn = 68,
/// スタンプカードの自動付与景品ダイアログを見る
  NautilusAnalyticsEventShowStampCardPrizeAutoExchangeDialog = 69,
/// スタンプカードのコンプリートダイアログを見る
  NautilusAnalyticsEventShowStampCardCompleteDialog = 70,
/// スタンプカードを交換しますかダイアログを見る
  NautilusAnalyticsEventShowStampCardExchangeSelectDialog = 71,
/// スタンプカードを交換しましたを見る
  NautilusAnalyticsEventShowStampCardExchangeSuccessDialog = 72,
/// スタンプカードを交換しました画面内リンクをタップ
  NautilusAnalyticsEventTapStampCardExchangeSuccessLinkInDialog = 73,
/// スタンプラリー一覧を見る
  NautilusAnalyticsEventShowStampRallyList = 74,
/// スタンプラリー詳細を見る
  NautilusAnalyticsEventShowStampRallyDetail = 75,
/// スタンプラリーのスポットをタップ
  NautilusAnalyticsEventTapStampRallySpotList = 76,
/// スタンプラリーの景品交換をタップする
  NautilusAnalyticsEventTapStampRallyPrizeExchange = 77,
/// スタンプを貯めるをタップする
  NautilusAnalyticsEventTapStampRallyCheckIn = 78,
/// スタンプラリーの自動付与景品ダイアログを見る
  NautilusAnalyticsEventShowStampRallyPrizeAutoExchangeDialog = 79,
/// スタンプラリーのコンプリートダイアログを見る
  NautilusAnalyticsEventShowStampRallyCompleteDialog = 80,
/// スタンプラリーの交換ダイアログを見る
  NautilusAnalyticsEventShowStampRallyExchangeSelectDialog = 81,
/// スタンプラリーの交換成功ダイアログを見る
  NautilusAnalyticsEventShowStampRallyExchangeSuccessDialog = 82,
/// スタンプラリーの交換成功ダイアログ内のリンクをタップ
  NautilusAnalyticsEventTapStampRallyExchangeSuccessLinkInDialog = 83,
/// スタンプラリースポット一覧を見る
  NautilusAnalyticsEventShowStampRallySpotList = 84,
/// スポット一覧でスポットをタップ
  NautilusAnalyticsEventTapStampRallySpot = 85,
/// スタンプラリーのスポット一覧で経路検索をタップ
  NautilusAnalyticsEventTapStampRallySpotMapApp = 86,
/// スポット一覧地図内のピンをタップする
  NautilusAnalyticsEventTapStampRallySpotPinInMap = 87,
/// 店舗検索広域地図画面を見る
  NautilusAnalyticsEventShowStoreSearchWidemap = 88,
};

/// 分析SDKから送信するイベントのチャネル定義
typedef SWIFT_ENUM(NSInteger, NautilusAnalyticsEventChannel, open) {
/// アプリ
  NautilusAnalyticsEventChannelApp = 0,
/// アプリ内WebView
  NautilusAnalyticsEventChannelWebInApp = 1,
};


/// 分析SDKから送信されるイベントのペイロード
SWIFT_CLASS("_TtC20NautilusAnalyticsSDK29NautilusAnalyticsEventPayload")
@interface NautilusAnalyticsEventPayload : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// イベントプロパティ：分析プラットフォームに送る時の名前の定義
typedef SWIFT_ENUM(NSInteger, NautilusAnalyticsEventProperty, open) {
/// 直前のイベント
  NautilusAnalyticsEventPropertyPreviousEvent = 0,
/// 緯度
  NautilusAnalyticsEventPropertyLatitude = 1,
/// 経度
  NautilusAnalyticsEventPropertyLongitude = 2,
/// セッションID
  NautilusAnalyticsEventPropertySessionID = 3,
/// イベント発生日時
  NautilusAnalyticsEventPropertyEventFiredTime = 4,
/// セグメントID
  NautilusAnalyticsEventPropertySegmentID = 5,
/// チャネルタイプ
  NautilusAnalyticsEventPropertyChannelType = 6,
/// 起動状態
  NautilusAnalyticsEventPropertyAppStartType = 7,
/// アプリ起動
  NautilusAnalyticsEventPropertyAppStart = 8,
/// 移動経機
  NautilusAnalyticsEventPropertyAppMoveTrigger = 9,
/// 移動経機となったPUSH ID
  NautilusAnalyticsEventPropertyAppMoveNotificationID = 10,
/// 移動経機となったPUSHタイトル
  NautilusAnalyticsEventPropertyAppMoveNotificationTitle = 11,
/// 移動経機となったときの遷移先画面
  NautilusAnalyticsEventPropertyAppMoveNotificationTransition = 12,
/// 移動経機となったURL
  NautilusAnalyticsEventPropertyAppMoveURL = 13,
/// 離脱したスクリーン
  NautilusAnalyticsEventPropertyIntroductionFinishPage = 14,
/// 性別
  NautilusAnalyticsEventPropertyGender = 15,
/// 誕生年月日
  NautilusAnalyticsEventPropertyBirthday = 16,
/// 都道府県名
  NautilusAnalyticsEventPropertyPrefecture = 17,
/// 市区町村名
  NautilusAnalyticsEventPropertyMunicipality = 18,
/// ブランドID
  NautilusAnalyticsEventPropertyBrandID = 19,
/// 顧客管理コード
  NautilusAnalyticsEventPropertyManageCode = 20,
/// 拡張項目1
  NautilusAnalyticsEventPropertyOptionalAttribute1 = 21,
/// 拡張項目2
  NautilusAnalyticsEventPropertyOptionalAttribute2 = 22,
/// 拡張項目3
  NautilusAnalyticsEventPropertyOptionalAttribute3 = 23,
/// 拡張項目4
  NautilusAnalyticsEventPropertyOptionalAttribute4 = 24,
/// 拡張項目5
  NautilusAnalyticsEventPropertyOptionalAttribute5 = 25,
/// 拡張項目6
  NautilusAnalyticsEventPropertyOptionalAttribute6 = 26,
/// 拡張項目7
  NautilusAnalyticsEventPropertyOptionalAttribute7 = 27,
/// 拡張項目8
  NautilusAnalyticsEventPropertyOptionalAttribute8 = 28,
/// 拡張項目9
  NautilusAnalyticsEventPropertyOptionalAttribute9 = 29,
/// 拡張項目10
  NautilusAnalyticsEventPropertyOptionalAttribute10 = 30,
/// PUSH通知ID
  NautilusAnalyticsEventPropertyNotificationID = 31,
/// PUSH通知タイトル
  NautilusAnalyticsEventPropertyNotificationTitle = 32,
/// 遷移先
  NautilusAnalyticsEventPropertyNotificationTransition = 33,
/// クーポンID
  NautilusAnalyticsEventPropertyCouponID = 34,
/// クーポンタイトル
  NautilusAnalyticsEventPropertyCouponTitle = 35,
/// クーポンカテゴリ名”
  NautilusAnalyticsEventPropertyCouponCategory = 36,
/// クーポン種別
  NautilusAnalyticsEventPropertyCouponType = 37,
/// 遷移先
  NautilusAnalyticsEventPropertyCouponURL = 38,
/// メッセージID
  NautilusAnalyticsEventPropertyInAppMessageID = 39,
/// メッセージ内容
  NautilusAnalyticsEventPropertyInAppMessageBody = 40,
/// 遷移先
  NautilusAnalyticsEventPropertyInAppMessageTransition = 41,
/// メッセージの表示方法
  NautilusAnalyticsEventPropertyInAppMessageType = 42,
/// リスト表示したときの動き
  NautilusAnalyticsEventPropertyStoreListMoveActionType = 43,
/// 表示領域
  NautilusAnalyticsEventPropertyStoreListDisplayRatio = 44,
/// 店舗ID
  NautilusAnalyticsEventPropertyStoreID = 45,
/// 店舗名
  NautilusAnalyticsEventPropertyStoreName = 46,
/// リンク文言
  NautilusAnalyticsEventPropertyStoreLinkTitle = 47,
/// 遷移先
  NautilusAnalyticsEventPropertyStoreURL = 48,
/// キーワード
  NautilusAnalyticsEventPropertyStoreSearchKeyword = 49,
/// エリア
  NautilusAnalyticsEventPropertyStoreSearchFilteringArea = 50,
/// 検索時の中心座標
  NautilusAnalyticsEventPropertyStoreSearchCenterCoordinate = 51,
/// 検索時に動かした距離
  NautilusAnalyticsEventPropertyStoreSearchMoveDistance = 52,
/// 表示されてるピンの数
  NautilusAnalyticsEventPropertyStoreSearchNuberOfFoundShops = 53,
/// バナーID
  NautilusAnalyticsEventPropertyBannerID = 54,
/// バナータイトル
  NautilusAnalyticsEventPropertyBannerTitle = 55,
/// バナーカテゴリ
  NautilusAnalyticsEventPropertyBannerCategory = 56,
/// バナー表示方法
  NautilusAnalyticsEventPropertyBannerStyle = 57,
/// バナー表示位置
  NautilusAnalyticsEventPropertyBannerIndex = 58,
/// 遷移先
  NautilusAnalyticsEventPropertyBannerTransition = 59,
/// カテゴリ名
  NautilusAnalyticsEventPropertySelectedContentCategory = 60,
/// コンテンツID
  NautilusAnalyticsEventPropertyContentID = 61,
/// コンテンツタイトル
  NautilusAnalyticsEventPropertyContentTitle = 62,
/// コンテンツカテゴリ名
  NautilusAnalyticsEventPropertyContentCategory = 63,
/// コンテンツ種別
  NautilusAnalyticsEventPropertyContentType = 64,
/// 遷移先
  NautilusAnalyticsEventPropertyContentURL = 65,
/// 抽選ID
  NautilusAnalyticsEventPropertyLotteryID = 66,
/// 抽選タイトル
  NautilusAnalyticsEventPropertyLotteryTitle = 67,
/// 抽選種類
  NautilusAnalyticsEventPropertyLotteryType = 68,
/// 抽選実行済みか
  NautilusAnalyticsEventPropertyLotteryCompleted = 69,
/// 景品ID
  NautilusAnalyticsEventPropertyPrizeID = 70,
/// 何等（抽選結果）
  NautilusAnalyticsEventPropertyLotteryRank = 71,
/// 景品の種類
  NautilusAnalyticsEventPropertyPrizeType = 72,
/// クーポン交換ID
  NautilusAnalyticsEventPropertyPrizeCouponExchangeID = 73,
/// 付与ポイント
  NautilusAnalyticsEventPropertyPrizePoint = 74,
/// スタンプカードID
  NautilusAnalyticsEventPropertyStampCardID = 75,
/// スタンプカードタイトル
  NautilusAnalyticsEventPropertyStampCardTitle = 76,
/// スタンプカードPrizeID
  NautilusAnalyticsEventPropertyStampCardPrizeID = 77,
/// スタンプカードPrizeタイトル
  NautilusAnalyticsEventPropertyStampCardPrizeTitle = 78,
/// スタンプラリーID
  NautilusAnalyticsEventPropertyStampRallyID = 79,
/// スタンプラリータイトル
  NautilusAnalyticsEventPropertyStampRallyTitle = 80,
/// スタンプラリーPrizeID
  NautilusAnalyticsEventPropertyStampRallyPrizeID = 81,
/// スタンプラリーPrizeタイトル
  NautilusAnalyticsEventPropertyStampRallyPrizeTitle = 82,
/// スポットID
  NautilusAnalyticsEventPropertySpotID = 83,
/// スポット名
  NautilusAnalyticsEventPropertySpotName = 84,
};


/// イベント送信、ユーザープロパティ送信、ユーザーIDの設定が行われたことを検知するためのインターフェース
SWIFT_PROTOCOL("_TtP20NautilusAnalyticsSDK23NautilusAnalyticsPlugin_")
@protocol NautilusAnalyticsPlugin
/// プラグイン名
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// 初期化
/// \param name プラグイン名 
///
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name;
/// 初期化
/// \param analytics NautilusAnalytics 
///
- (void)setup:(NautilusAnalytics * _Nonnull)analytics;
/// イベント送信
/// \param payload アプリから送信されるイベントのペイロード 
///
- (NautilusAnalyticsEventPayload * _Nonnull)sendEventWithPayload:(NautilusAnalyticsEventPayload * _Nonnull)payload SWIFT_WARN_UNUSED_RESULT;
/// ユーザープロパティ設定
/// \param propertyName プロパティ名
///
/// \param value プロパティ
///
- (void)setUserPropertyWithPropertyName:(NSString * _Nonnull)propertyName value:(id _Nullable)value;
/// ユーザープロパティの削除
/// \param propertyName プロパティ名 
///
- (void)removeUserPropertyWithPropertyName:(NSString * _Nonnull)propertyName;
/// ユーザープロパティ送信
- (void)sendUserProperty;
/// ユーザーIDの設定
/// \param userID ユーザID 
///
- (void)setUserID:(NSString * _Nonnull)userID;
/// ユーザーIDの削除
- (void)removeUserID;
@end

/// ユーザプロパティ：分析プラットフォームに送る時の名前の定義
typedef SWIFT_ENUM(NSInteger, NautilusAnalyticsUserProperty, open) {
/// CID
  NautilusAnalyticsUserPropertyCid = 0,
/// PID
  NautilusAnalyticsUserPropertyPid = 1,
/// お気に入り店舗ID
  NautilusAnalyticsUserPropertyFavoriteShopIDList = 2,
/// お気に入り店舗名
  NautilusAnalyticsUserPropertyFavoriteShopNameList = 3,
/// お気に入りクーポンID
  NautilusAnalyticsUserPropertyFavoriteCouponIDList = 4,
/// お気に入りクーポンタイトル
  NautilusAnalyticsUserPropertyFavoriteCouponNameList = 5,
/// お気に入りコンテンツID
  NautilusAnalyticsUserPropertyFavoriteContentIDList = 6,
/// お気に入りコンテンツタイトル
  NautilusAnalyticsUserPropertyFavoriteContentNameList = 7,
/// 性別
  NautilusAnalyticsUserPropertyGender = 8,
/// 誕生年月日
  NautilusAnalyticsUserPropertyBirthday = 9,
/// 都道府県名
  NautilusAnalyticsUserPropertyPrefecture = 10,
/// 市区町村名
  NautilusAnalyticsUserPropertyMunicipality = 11,
/// 標準会員属性1
  NautilusAnalyticsUserPropertyOptionalAttribute1 = 12,
/// 標準会員属性2
  NautilusAnalyticsUserPropertyOptionalAttribute2 = 13,
/// 標準会員属性3
  NautilusAnalyticsUserPropertyOptionalAttribute3 = 14,
/// 標準会員属性4
  NautilusAnalyticsUserPropertyOptionalAttribute4 = 15,
/// 標準会員属性5
  NautilusAnalyticsUserPropertyOptionalAttribute5 = 16,
/// 標準会員属性6
  NautilusAnalyticsUserPropertyOptionalAttribute6 = 17,
/// 標準会員属性7
  NautilusAnalyticsUserPropertyOptionalAttribute7 = 18,
/// 標準会員属性8
  NautilusAnalyticsUserPropertyOptionalAttribute8 = 19,
/// 標準会員属性9
  NautilusAnalyticsUserPropertyOptionalAttribute9 = 20,
/// 標準会員属性10
  NautilusAnalyticsUserPropertyOptionalAttribute10 = 21,
};

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
