// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name NautilusLotteryUISDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import DeveloperToolsSupport
import Foundation
import Lottie
import NautilusAnalyticsSDK
import NautilusConfigSDK
import NautilusContainerSDK
import NautilusCoreSDK
import NautilusIdentifySDK
import NautilusImagingSDK
import NautilusLoggingSDK
import NautilusLotterySDK
import NautilusServerTimeSDK
import NautilusUISDK
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public protocol NautilusLotteryDetailViewControllerDelegate {
  @objc func lotteryDetail(_ viewController: NautilusLotteryUISDK.NautilusLotteryDetailViewController, didOpen lottery: NautilusLotterySDK.NautilusLotteryInfo, prize: NautilusLotterySDK.NautilusLotteryPrizeInfo)
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency public class NautilusLotteryDetailViewController : UIKit.UIViewController {
  @_Concurrency.MainActor @preconcurrency weak public var delegate: (any NautilusLotteryUISDK.NautilusLotteryDetailViewControllerDelegate)?
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @objc get
  }
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency final public class NautilusLotteryListViewController : UIKit.UIViewController {
  @_Concurrency.MainActor @preconcurrency @objc override final public var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @objc get
  }
  @objc deinit
  @_Concurrency.MainActor @preconcurrency @objc override final public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override final public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@objc public protocol NautilusLotteryUIDelegate {
  @objc func lottery(_ lotteryUI: NautilusLotteryUISDK.NautilusLotteryUI, didTap lottery: NautilusLotterySDK.NautilusLotteryInfo, prize: NautilusLotterySDK.NautilusLotteryPrizeInfo, from viewController: UIKit.UIViewController)
}
@_hasMissingDesignatedInitializers @objc final public class NautilusLotteryUI : ObjectiveC.NSObject, NautilusCoreSDK.NautilusFeature {
  @objc public static var configFilename: Swift.String? {
    @objc get
  }
  @objc public static var componentType: NautilusContainerSDK.NautilusComponentType {
    @objc get
  }
  @objc public static var dependencies: [NautilusContainerSDK.NautilusComponentDependency] {
    @objc get
  }
  @objc final public var app: NautilusCoreSDK.NautilusApp
  @objc final public var name: Swift.String?
  @objc final public var featureStatus: NautilusCoreSDK.NautilusFeatureStatus {
    @objc get
  }
  weak final public var delegate: (any NautilusLotteryUISDK.NautilusLotteryUIDelegate)?
  @objc public static func initialize(application: NautilusCoreSDK.NautilusApp, completion: @escaping NautilusCoreSDK.NautilusFeatureInitializationCompletion)
  @objc public static func lotteryUI() -> NautilusLotteryUISDK.NautilusLotteryUI
  @objc(lotteryAppNamed:) public static func lotteryUI(appName: Swift.String) -> NautilusLotteryUISDK.NautilusLotteryUI
  @objc final public func presentLotteryListViewController(in viewController: UIKit.UIViewController)
  @objc final public func instantiateLotteryListViewController() -> NautilusLotteryUISDK.NautilusLotteryListViewController
  @available(*, deprecated, message: "50387:特定案件用のメソッドです。他案件での使用は避けてください。")
  @objc final public func instantiateLotteryListViewController(excludeAliasList: [Swift.String]) -> NautilusLotteryUISDK.NautilusLotteryListViewController
  @objc final public func presentLotteryDetailViewController(in viewController: UIKit.UIViewController, lotteryID: Swift.Int)
  @objc final public func instantiateLotteryDetailViewController(lotteryID: Swift.Int) -> NautilusLotteryUISDK.NautilusLotteryDetailViewController
  @objc final public func presentLotteryDetailViewController(in viewController: UIKit.UIViewController, lottery: NautilusLotterySDK.NautilusLotteryInfo)
  @objc final public func instantiateLotteryDetailViewController(lottery: NautilusLotterySDK.NautilusLotteryInfo) -> NautilusLotteryUISDK.NautilusLotteryDetailViewController
  @objc deinit
}
extension UIKit.UINavigationController {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @objc get
  }
}
