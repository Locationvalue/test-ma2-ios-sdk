// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target x86_64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name NautilusPointSDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Foundation
import NautilusConfigSDK
import NautilusContainerSDK
import NautilusCoreSDK
import NautilusIdentifySDK
import NautilusLoggingSDK
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public let NautilusPointErrorDomain: Swift.String
@objc public enum NautilusPointError : Swift.Int, Swift.Error {
  public var nautilusPointErrorCode: Swift.Int {
    get
  }
  case unknown
  case connection
  case timedout
  case apiProcessError
  case httpConnection
  case parseFailure
  case userCancelled
  case invalidParamater
  case invalidInstance
  case invalidParameters = 100
  case missingRequiredParameter = 101
  case unexpectedParameterFormat = 102
  case serverError = 200
  case serviceMaintenance = 901
  case unknownAPIService = 903
  case invalidUserPID = 905
  case developerError = 906
  case requiresLoginStatus = 907
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public static var _nsErrorDomain: Swift.String {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objc public class NautilusPointNewestExpiration : ObjectiveC.NSObject {
  final public let pointCount: Swift.Int?
  final public let pointExpirationDate: Foundation.Date?
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class NautilusPoint : ObjectiveC.NSObject, NautilusCoreSDK.NautilusFeature {
  @objc public static var configFilename: Swift.String? {
    @objc get
  }
  @objc public static var componentType: NautilusContainerSDK.NautilusComponentType {
    @objc get
  }
  @objc public static var dependencies: [NautilusContainerSDK.NautilusComponentDependency] {
    @objc get
  }
  @objc final public let app: NautilusCoreSDK.NautilusApp
  @objc final public let name: Swift.String?
  @objc final public var featureStatus: NautilusCoreSDK.NautilusFeatureStatus {
    @objc get
  }
  @objc public static func initialize(application: NautilusCoreSDK.NautilusApp, completion: @escaping NautilusCoreSDK.NautilusFeatureInitializationCompletion)
  @objc public static func point() -> NautilusPointSDK.NautilusPoint
  @objc(pointAppNamed:) public static func point(appName: Swift.String) -> NautilusPointSDK.NautilusPoint
  final public func getPointHistoryTotal(completion: @escaping (Swift.Result<(Swift.Int, NautilusPointSDK.NautilusPointNewestExpiration?), NautilusPointSDK.NautilusPointError>) -> Swift.Void)
  @objc final public func getPointHistoryTotal(completion: @escaping (Swift.Int, NautilusPointSDK.NautilusPointNewestExpiration?, Foundation.NSError?) -> Swift.Void)
  @objc deinit
}
extension NautilusPointSDK.NautilusPointError : Swift.Equatable {}
extension NautilusPointSDK.NautilusPointError : Swift.Hashable {}
extension NautilusPointSDK.NautilusPointError : Swift.RawRepresentable {}
